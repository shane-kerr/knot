---
- hosts: all

  remote_user: root
  become: true

  vars:
    repos:
      - knot-dns-latest
      # - knot-dns-devel  # enable to test development builds
    selinux_on: true
    ansible_python_interpreter: /usr/bin/python2
    dig_package:
      Debian: dnsutils
      Ubuntu: dnsutils
      Fedora: bind-utils
      CentOS: bind-utils
      Archlinux: bind-tools
    configure_obs_repo:
      Fedora: |
        dnf config-manager --add-repo https://download.opensuse.org/repositories/home:CZ-NIC:{{ item }}/Fedora_27/home:CZ-NIC:{{ item }}.repo
      CentOS: |
        yum install -y wget &&
        wget -i wget https://download.opensuse.org/repositories/home:CZ-NIC:{{ item }}/CentOS_7_EPEL/home:CZ-NIC:{{ item }}.repo -O /etc/yum.repos.d/home:CZ-NIC:{{ item }}.repo
      Debian: |
        echo 'deb http://download.opensuse.org/repositories/home:/CZ-NIC:/{{ item }}/Debian_9.0/ /' > /etc/apt/sources.list.d/{{ item }}.list &&
        wget -nv https://download.opensuse.org/repositories/home:CZ-NIC:{{ item }}/Debian_9.0/Release.key -O Release.key &&
        apt-key add - < Release.key &&
        apt-get update
      Ubuntu: |
        echo 'deb http://download.opensuse.org/repositories/home:/CZ-NIC:/{{ item }}/xUbuntu_16.04/ /' > /etc/apt/sources.list.d/{{ item }}.list &&
        wget -nv https://download.opensuse.org/repositories/home:CZ-NIC:{{ item }}/xUbuntu_16.04/Release.key -O Release.key &&
        apt-key add - < Release.key &&
        apt-get update

  # HACK: Ansible requires Python 2, but it's not installed by default in all distros
  gather_facts: false
  pre_tasks:
    - name: install python and deps for ansible modules
      raw: |
        yum install -y python2 python2-dnf libselinux-python || \
        pacman -Sy python2 --noconfirm || \
        apt-get install -y python || \
        :
      ignore_errors: true
    - name: gather facts
      setup:

  tasks:
    - name: install epel
      package:
        name: epel-release
        state: present
      when: ansible_distribution == 'CentOS'

    - name: configure OBS repository
      shell: "{{ configure_obs_repo[ansible_distribution] }}"
      with_items: "{{ repos }}"
      when: ansible_distribution != 'Archlinux'

    - block:
        - name: configure OBS repository (Arch)
          blockinfile:
            block: |
              [home_CZ-NIC_{{ item }}_Arch]
              SigLevel = Never
              Server = https://download.opensuse.org/repositories/home:/CZ-NIC:/{{ item }}/Arch/$arch
            insertbefore: '^\[core\]'
            path: /etc/pacman.conf
            state: present
          with_items: "{{ repos }}"
        - name: sync repos (Arch)
          shell: pacman -Syu --noconfirm
      when: ansible_distribution == 'Archlinux'

    - name: install knot
      package:
        name: knot
        state: latest

    - name: install dig
      package:
        name: "{{ dig_package[ansible_distribution] }}"
        state: present

    - name: turn off SELinux
      selinux:
        policy: targeted
        state: permissive
      when: not selinux_on and ansible_distribution in ['RedHat', 'Fedora']

    - name: create example.com zone
      copy:
        dest: /etc/knot/example.com.zone
        content: |
          $ORIGIN example.com.
          $TTL 3600
          @	SOA	dns1.example.com. hostmaster.example.com. (
              2010111213	; serial
              6h		; refresh
              1h		; retry
              1w		; expire
              1d )		; minimum
            NS	dns1
          dns1	A	192.0.2.1

    - name: create config
      blockinfile:
        dest: /etc/knot/knot.conf
        block: |
          zone:
            - domain: example.com
              file: "/etc/knot/example.com.zone"

    - name: start knot.service
      service:
        name: knot.service
        state: restarted

    - name: resolve dns1.example.com
      shell: dig @127.0.0.1 dns1.example.com A
      register: res
      failed_when: '"192.0.2.1" not in res.stdout'

